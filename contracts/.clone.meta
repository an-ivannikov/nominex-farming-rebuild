[
  {
    "path": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol",
    "targetContract": "Nmx",
    "address": "0xd32d01a43c869edcd1117c640fbdcfcfd97d9d65",
    "chainId": 56,
    "creationTransaction": "0x43c7153751984a869f458b4705641e9bb54970f120cf0089b12f5b7167ed080e",
    "deployer": "0x4c09956424d7df0773984d850c8007ca9e4a5ea7",
    "constructorArguments": "0x000000000000000000000000c86e74935181acb6de7c9d8307dd4092e35cf4d0",
    "storageLayout": {
      "storage": [
        {
          "astId": 344,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_balances",
          "offset": 0,
          "slot": "0",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 350,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_allowances",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
        },
        {
          "astId": 352,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_totalSupply",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 354,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_name",
          "offset": 0,
          "slot": "3",
          "type": "t_string_storage"
        },
        {
          "astId": 356,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_symbol",
          "offset": 0,
          "slot": "4",
          "type": "t_string_storage"
        },
        {
          "astId": 358,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_decimals",
          "offset": 0,
          "slot": "5",
          "type": "t_uint8"
        },
        {
          "astId": 30,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "_owner",
          "offset": 1,
          "slot": "5",
          "type": "t_address"
        },
        {
          "astId": 4606,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "nonces",
          "offset": 0,
          "slot": "6",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 4608,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "mintSchedule",
          "offset": 0,
          "slot": "7",
          "type": "t_address"
        },
        {
          "astId": 4612,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "poolByOwner",
          "offset": 0,
          "slot": "8",
          "type": "t_mapping(t_address,t_enum(MintPool)3692)"
        },
        {
          "astId": 4616,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "poolOwners",
          "offset": 0,
          "slot": "9",
          "type": "t_array(t_address)3_storage"
        },
        {
          "astId": 4621,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
          "label": "poolMintStates",
          "offset": 0,
          "slot": "12",
          "type": "t_array(t_struct(MintScheduleState)3703_storage)3_storage"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_address)3_storage": {
          "encoding": "inplace",
          "label": "address[3]",
          "numberOfBytes": "96",
          "base": "t_address"
        },
        "t_array(t_struct(MintScheduleState)3703_storage)3_storage": {
          "encoding": "inplace",
          "label": "struct MintScheduleState[3]",
          "numberOfBytes": "96",
          "base": "t_struct(MintScheduleState)3703_storage"
        },
        "t_enum(MintPool)3692": {
          "encoding": "inplace",
          "label": "enum MintPool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_enum(MintPool)3692)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => enum MintPool)",
          "numberOfBytes": "32",
          "value": "t_enum(MintPool)3692"
        },
        "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => mapping(address => uint256))",
          "numberOfBytes": "32",
          "value": "t_mapping(t_address,t_uint256)"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_string_storage": {
          "encoding": "bytes",
          "label": "string",
          "numberOfBytes": "32"
        },
        "t_struct(MintScheduleState)3703_storage": {
          "encoding": "inplace",
          "label": "struct MintScheduleState",
          "numberOfBytes": "32",
          "members": [
            {
              "astId": 3694,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
              "label": "time",
              "offset": 0,
              "slot": "0",
              "type": "t_uint40"
            },
            {
              "astId": 3696,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
              "label": "itemIndex",
              "offset": 5,
              "slot": "0",
              "type": "t_uint8"
            },
            {
              "astId": 3698,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
              "label": "weekIndex",
              "offset": 6,
              "slot": "0",
              "type": "t_uint16"
            },
            {
              "astId": 3700,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
              "label": "weekStartTime",
              "offset": 8,
              "slot": "0",
              "type": "t_uint40"
            },
            {
              "astId": 3702,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/Nmx.sol:Nmx",
              "label": "nextTickSupply",
              "offset": 13,
              "slot": "0",
              "type": "t_uint128"
            }
          ]
        },
        "t_uint128": {
          "encoding": "inplace",
          "label": "uint128",
          "numberOfBytes": "16"
        },
        "t_uint16": {
          "encoding": "inplace",
          "label": "uint16",
          "numberOfBytes": "2"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        },
        "t_uint40": {
          "encoding": "inplace",
          "label": "uint40",
          "numberOfBytes": "5"
        },
        "t_uint8": {
          "encoding": "inplace",
          "label": "uint8",
          "numberOfBytes": "1"
        }
      }
    }
  },
  {
    "path": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol",
    "targetContract": "StakingRouter",
    "address": "0xc2f8f34907c73e3bf509e8f82eb44cb0a7e00cdc",
    "chainId": 56,
    "creationTransaction": "0x9afab55dd51c8533b460cee29fa1c07d451eb6a69e55f2a1a9b54bfbf509c3b9",
    "deployer": "0x4c09956424d7df0773984d850c8007ca9e4a5ea7",
    "constructorArguments": "0x000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d65",
    "storageLayout": {
      "storage": [
        {
          "astId": 30,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol:StakingRouter",
          "label": "_owner",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 5261,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol:StakingRouter",
          "label": "serviceShares",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_int128)"
        },
        {
          "astId": 5265,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol:StakingRouter",
          "label": "activeServices",
          "offset": 0,
          "slot": "2",
          "type": "t_array(t_address)dyn_storage"
        },
        {
          "astId": 5267,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol:StakingRouter",
          "label": "pendingSupplyOfInactiveServices",
          "offset": 0,
          "slot": "3",
          "type": "t_uint256"
        },
        {
          "astId": 5271,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingRouter.sol:StakingRouter",
          "label": "pendingSupplies",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_address,t_uint256)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_address)dyn_storage": {
          "encoding": "dynamic_array",
          "label": "address[]",
          "numberOfBytes": "32",
          "base": "t_address"
        },
        "t_int128": {
          "encoding": "inplace",
          "label": "int128",
          "numberOfBytes": "16"
        },
        "t_mapping(t_address,t_int128)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => int128)",
          "numberOfBytes": "32",
          "value": "t_int128"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  },
  {
    "path": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol",
    "targetContract": "DoubleSupplyStakingRouter",
    "address": "0x99b674ba03e896d952983908dba8d7b560fb10d5",
    "chainId": 56,
    "creationTransaction": "0xdac683cd3a6aea8a1fb179bfcd60b81310bf21b9f926fde60cd2eb59376d07be",
    "deployer": "0x4c09956424d7df0773984d850c8007ca9e4a5ea7",
    "constructorArguments": "0x000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d65",
    "storageLayout": {
      "storage": [
        {
          "astId": 30,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
          "label": "_owner",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 3709,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
          "label": "activeServices",
          "offset": 0,
          "slot": "1",
          "type": "t_array(t_address)dyn_storage"
        },
        {
          "astId": 3711,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
          "label": "totalSupply",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 3715,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
          "label": "supplyStates",
          "offset": 0,
          "slot": "3",
          "type": "t_mapping(t_address,t_struct(ServiceSupplyState)3706_storage)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_address)dyn_storage": {
          "encoding": "dynamic_array",
          "label": "address[]",
          "numberOfBytes": "32",
          "base": "t_address"
        },
        "t_int128": {
          "encoding": "inplace",
          "label": "int128",
          "numberOfBytes": "16"
        },
        "t_mapping(t_address,t_struct(ServiceSupplyState)3706_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct ConstantComplexityStakingRouter.ServiceSupplyState)",
          "numberOfBytes": "32",
          "value": "t_struct(ServiceSupplyState)3706_storage"
        },
        "t_struct(ServiceSupplyState)3706_storage": {
          "encoding": "inplace",
          "label": "struct ConstantComplexityStakingRouter.ServiceSupplyState",
          "numberOfBytes": "64",
          "members": [
            {
              "astId": 3703,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
              "label": "processedSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 3705,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/DoubleSupplyStakingRouter.sol:DoubleSupplyStakingRouter",
              "label": "share",
              "offset": 0,
              "slot": "1",
              "type": "t_int128"
            }
          ]
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  },
  {
    "path": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol",
    "targetContract": "StakingService",
    "address": "0xdbf1b10fe3e05397cd454163f6f1ed0c1181c3b3",
    "chainId": 56,
    "creationTransaction": "0x915851c36d29dd959fa0f8f4a2f8a76535f7a8d2459f2fa1c8d8d3d6f74ffc77",
    "deployer": "0x4c09956424d7df0773984d850c8007ca9e4a5ea7",
    "constructorArguments": "0x000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d65000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d65000000000000000000000000d35181cdce436439b6562380844c7572a991fe16",
    "storageLayout": {
      "storage": [
        {
          "astId": 926,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "_paused",
          "offset": 0,
          "slot": "0",
          "type": "t_bool"
        },
        {
          "astId": 30,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "_owner",
          "offset": 1,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 5533,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "nonces",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 5541,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "nmxSupplier",
          "offset": 0,
          "slot": "2",
          "type": "t_address"
        },
        {
          "astId": 5543,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "state",
          "offset": 0,
          "slot": "3",
          "type": "t_struct(State)5496_storage"
        },
        {
          "astId": 5548,
          "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
          "label": "stakers",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_address,t_struct(Staker)5505_storage)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_struct(Staker)5505_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct StakingService.Staker)",
          "numberOfBytes": "32",
          "value": "t_struct(Staker)5505_storage"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_struct(Staker)5505_storage": {
          "encoding": "inplace",
          "label": "struct StakingService.Staker",
          "numberOfBytes": "96",
          "members": [
            {
              "astId": 5498,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "amount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 5500,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "initialRewardRate",
              "offset": 0,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 5502,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "reward",
              "offset": 16,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 5504,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "claimedReward",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            }
          ]
        },
        "t_struct(State)5496_storage": {
          "encoding": "inplace",
          "label": "struct StakingService.State",
          "numberOfBytes": "32",
          "members": [
            {
              "astId": 5493,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "totalStaked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128"
            },
            {
              "astId": 5495,
              "contract": "src/home/eraserpl/NetBeansProjects/eth-smart-contracts/contracts/StakingService.sol:StakingService",
              "label": "historicalRewardRate",
              "offset": 16,
              "slot": "0",
              "type": "t_uint128"
            }
          ]
        },
        "t_uint128": {
          "encoding": "inplace",
          "label": "uint128",
          "numberOfBytes": "16"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  },
  {
    "path": "src/contracts/StakingService2.sol",
    "targetContract": "StakingService2",
    "address": "0x10298be5abf74d111d133dc3493dc4c6a9fd924b",
    "chainId": 56,
    "creationTransaction": "0x004396d33525e9d432a44461a93494e19ddf801e255f2c1674777ad33fccf677",
    "deployer": "0xcd095a9bde9cbf6a89093fe0442c7d6cf58fae3b",
    "constructorArguments": "0x",
    "storageLayout": {
      "storage": [
        {
          "astId": 926,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "_paused",
          "offset": 0,
          "slot": "0",
          "type": "t_bool"
        },
        {
          "astId": 30,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "_owner",
          "offset": 1,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 5533,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "nonces",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 5541,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "nmxSupplier",
          "offset": 0,
          "slot": "2",
          "type": "t_address"
        },
        {
          "astId": 5543,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "state",
          "offset": 0,
          "slot": "3",
          "type": "t_struct(State)5496_storage"
        },
        {
          "astId": 5548,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "stakers",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_address,t_struct(Staker)5505_storage)"
        },
        {
          "astId": 5552,
          "contract": "src/contracts/StakingService2.sol:StakingService2",
          "label": "claimRewardPaused",
          "offset": 0,
          "slot": "5",
          "type": "t_bool"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_struct(Staker)5505_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct StakingService2.Staker)",
          "numberOfBytes": "32",
          "value": "t_struct(Staker)5505_storage"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_struct(Staker)5505_storage": {
          "encoding": "inplace",
          "label": "struct StakingService2.Staker",
          "numberOfBytes": "96",
          "members": [
            {
              "astId": 5498,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "amount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 5500,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "initialRewardRate",
              "offset": 0,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 5502,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "reward",
              "offset": 16,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 5504,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "claimedReward",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            }
          ]
        },
        "t_struct(State)5496_storage": {
          "encoding": "inplace",
          "label": "struct StakingService2.State",
          "numberOfBytes": "32",
          "members": [
            {
              "astId": 5493,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "totalStaked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128"
            },
            {
              "astId": 5495,
              "contract": "src/contracts/StakingService2.sol:StakingService2",
              "label": "historicalRewardRate",
              "offset": 16,
              "slot": "0",
              "type": "t_uint128"
            }
          ]
        },
        "t_uint128": {
          "encoding": "inplace",
          "label": "uint128",
          "numberOfBytes": "16"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  },
  {
    "path": "src/SingleStakerStakingService.sol",
    "targetContract": "SingleStakerStakingService",
    "address": "0x57e61daae04f8c5fc973493706ca6e746f62749a",
    "chainId": 56,
    "creationTransaction": "0x2b11cc623a269124b7efba558acea23bd6c8d384cfb146349c7f13b8f6970f81",
    "deployer": "0x5e635085c2c1287dc10e642cc173b0c89c870b09",
    "constructorArguments": "0x000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d65000000000000000000000000d32d01a43c869edcd1117c640fbdcfcfd97d9d6500000000000000000000000099b674ba03e896d952983908dba8d7b560fb10d5",
    "storageLayout": {
      "storage": [
        {
          "astId": 130,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "_paused",
          "offset": 0,
          "slot": "0",
          "type": "t_bool"
        },
        {
          "astId": 7,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "_owner",
          "offset": 1,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 1280,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "nonces",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 1288,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "nmxSupplier",
          "offset": 0,
          "slot": "2",
          "type": "t_address"
        },
        {
          "astId": 1290,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "staker",
          "offset": 0,
          "slot": "3",
          "type": "t_address"
        },
        {
          "astId": 1294,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "state",
          "offset": 0,
          "slot": "4",
          "type": "t_struct(State)1243_storage"
        },
        {
          "astId": 1300,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "stakers",
          "offset": 0,
          "slot": "5",
          "type": "t_mapping(t_address,t_struct(Staker)1252_storage)"
        },
        {
          "astId": 1304,
          "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
          "label": "claimRewardPaused",
          "offset": 0,
          "slot": "6",
          "type": "t_bool"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_struct(Staker)1252_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct SingleStakerStakingService.Staker)",
          "numberOfBytes": "32",
          "value": "t_struct(Staker)1252_storage"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_struct(Staker)1252_storage": {
          "encoding": "inplace",
          "label": "struct SingleStakerStakingService.Staker",
          "numberOfBytes": "96",
          "members": [
            {
              "astId": 1245,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "amount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 1247,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "initialRewardRate",
              "offset": 0,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 1249,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "reward",
              "offset": 16,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 1251,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "claimedReward",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            }
          ]
        },
        "t_struct(State)1243_storage": {
          "encoding": "inplace",
          "label": "struct SingleStakerStakingService.State",
          "numberOfBytes": "32",
          "members": [
            {
              "astId": 1240,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "totalStaked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128"
            },
            {
              "astId": 1242,
              "contract": "src/SingleStakerStakingService.sol:SingleStakerStakingService",
              "label": "historicalRewardRate",
              "offset": 16,
              "slot": "0",
              "type": "t_uint128"
            }
          ]
        },
        "t_uint128": {
          "encoding": "inplace",
          "label": "uint128",
          "numberOfBytes": "16"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  },
  {
    "path": "src/contracts/BoostingServicePrivateUpgradeable.sol",
    "targetContract": "BoostingServicePrivateUpgradeable",
    "address": "0x99dfa8dd16c07ae573c9dace6c2127140a3f4abf",
    "chainId": 56,
    "creationTransaction": "0x9d2cb1b3f197870386b8559fb2107dcb040c40e3adcde422bbad5514b7e1eedf",
    "deployer": "0x5e635085c2c1287dc10e642cc173b0c89c870b09",
    "constructorArguments": "0x",
    "storageLayout": {
      "storage": [
        {
          "astId": 527,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "_initialized",
          "offset": 0,
          "slot": "0",
          "type": "t_uint8"
        },
        {
          "astId": 530,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "_initializing",
          "offset": 1,
          "slot": "0",
          "type": "t_bool"
        },
        {
          "astId": 509,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "__gap",
          "offset": 0,
          "slot": "1",
          "type": "t_array(t_uint256)50_storage"
        },
        {
          "astId": 824,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "__gap",
          "offset": 0,
          "slot": "51",
          "type": "t_array(t_uint256)50_storage"
        },
        {
          "astId": 1277,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "__gap",
          "offset": 0,
          "slot": "101",
          "type": "t_array(t_uint256)50_storage"
        },
        {
          "astId": 846,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "_paused",
          "offset": 0,
          "slot": "151",
          "type": "t_bool"
        },
        {
          "astId": 951,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "__gap",
          "offset": 0,
          "slot": "152",
          "type": "t_array(t_uint256)49_storage"
        },
        {
          "astId": 10,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "_owner",
          "offset": 0,
          "slot": "201",
          "type": "t_address"
        },
        {
          "astId": 130,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "__gap",
          "offset": 0,
          "slot": "202",
          "type": "t_array(t_uint256)49_storage"
        },
        {
          "astId": 4299,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "domain_separator",
          "offset": 0,
          "slot": "251",
          "type": "t_bytes32"
        },
        {
          "astId": 4301,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "nmxSupplier",
          "offset": 0,
          "slot": "252",
          "type": "t_address"
        },
        {
          "astId": 4303,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "boostingRate",
          "offset": 20,
          "slot": "252",
          "type": "t_uint16"
        },
        {
          "astId": 4305,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "penaltyRate",
          "offset": 22,
          "slot": "252",
          "type": "t_uint16"
        },
        {
          "astId": 4307,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "performanceFee",
          "offset": 24,
          "slot": "252",
          "type": "t_uint16"
        },
        {
          "astId": 4309,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "totalShares",
          "offset": 0,
          "slot": "253",
          "type": "t_uint128"
        },
        {
          "astId": 4311,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "totalStakedCompounded",
          "offset": 16,
          "slot": "253",
          "type": "t_uint128"
        },
        {
          "astId": 4313,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "totalStaked",
          "offset": 0,
          "slot": "254",
          "type": "t_uint128"
        },
        {
          "astId": 4315,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "totalBoostings",
          "offset": 16,
          "slot": "254",
          "type": "t_uint128"
        },
        {
          "astId": 4317,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "historicalCompoundRate",
          "offset": 0,
          "slot": "255",
          "type": "t_uint128"
        },
        {
          "astId": 4319,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "historicalBoostingRate",
          "offset": 16,
          "slot": "255",
          "type": "t_uint128"
        },
        {
          "astId": 4324,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "stakers",
          "offset": 0,
          "slot": "256",
          "type": "t_mapping(t_address,t_struct(Staker)4265_storage)"
        },
        {
          "astId": 4328,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "boostingRateHistory",
          "offset": 0,
          "slot": "257",
          "type": "t_array(t_struct(BoostingRateCheckpoint)4270_storage)dyn_storage"
        },
        {
          "astId": 4332,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "nonces",
          "offset": 0,
          "slot": "258",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 4334,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "migrator",
          "offset": 0,
          "slot": "259",
          "type": "t_address"
        },
        {
          "astId": 4336,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "unstakedShares",
          "offset": 0,
          "slot": "260",
          "type": "t_uint128"
        },
        {
          "astId": 4338,
          "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
          "label": "upgraded",
          "offset": 16,
          "slot": "260",
          "type": "t_bool"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_struct(BoostingRateCheckpoint)4270_storage)dyn_storage": {
          "encoding": "dynamic_array",
          "label": "struct BoostingServicePrivateUpgradeable.BoostingRateCheckpoint[]",
          "numberOfBytes": "32",
          "base": "t_struct(BoostingRateCheckpoint)4270_storage"
        },
        "t_array(t_uint256)49_storage": {
          "encoding": "inplace",
          "label": "uint256[49]",
          "numberOfBytes": "1568",
          "base": "t_uint256"
        },
        "t_array(t_uint256)50_storage": {
          "encoding": "inplace",
          "label": "uint256[50]",
          "numberOfBytes": "1600",
          "base": "t_uint256"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_bytes32": {
          "encoding": "inplace",
          "label": "bytes32",
          "numberOfBytes": "32"
        },
        "t_mapping(t_address,t_struct(Staker)4265_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct BoostingServicePrivateUpgradeable.Staker)",
          "numberOfBytes": "32",
          "value": "t_struct(Staker)4265_storage"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_struct(BoostingRateCheckpoint)4270_storage": {
          "encoding": "inplace",
          "label": "struct BoostingServicePrivateUpgradeable.BoostingRateCheckpoint",
          "numberOfBytes": "32",
          "members": [
            {
              "astId": 4267,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "time",
              "offset": 0,
              "slot": "0",
              "type": "t_uint64"
            },
            {
              "astId": 4269,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "value",
              "offset": 8,
              "slot": "0",
              "type": "t_uint128"
            }
          ]
        },
        "t_struct(Staker)4265_storage": {
          "encoding": "inplace",
          "label": "struct BoostingServicePrivateUpgradeable.Staker",
          "numberOfBytes": "128",
          "members": [
            {
              "astId": 4250,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "initialCompoundRate",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128"
            },
            {
              "astId": 4252,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "initialBoostingRate",
              "offset": 16,
              "slot": "0",
              "type": "t_uint128"
            },
            {
              "astId": 4254,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "principalAmount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 4256,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "boostingAmount",
              "offset": 16,
              "slot": "1",
              "type": "t_uint128"
            },
            {
              "astId": 4258,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "unlockedBoostingAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint128"
            },
            {
              "astId": 4260,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "amount",
              "offset": 16,
              "slot": "2",
              "type": "t_uint128"
            },
            {
              "astId": 4262,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "shares",
              "offset": 0,
              "slot": "3",
              "type": "t_uint128"
            },
            {
              "astId": 4264,
              "contract": "src/contracts/BoostingServicePrivateUpgradeable.sol:BoostingServicePrivateUpgradeable",
              "label": "stakedAt",
              "offset": 16,
              "slot": "3",
              "type": "t_uint64"
            }
          ]
        },
        "t_uint128": {
          "encoding": "inplace",
          "label": "uint128",
          "numberOfBytes": "16"
        },
        "t_uint16": {
          "encoding": "inplace",
          "label": "uint16",
          "numberOfBytes": "2"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        },
        "t_uint64": {
          "encoding": "inplace",
          "label": "uint64",
          "numberOfBytes": "8"
        },
        "t_uint8": {
          "encoding": "inplace",
          "label": "uint8",
          "numberOfBytes": "1"
        }
      }
    }
  }
]